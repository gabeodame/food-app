"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.currentUser = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const currentUser = (req, res, next) => {
    var _a, _b;
    // Check for JWT in session or Authorization header
    const token = ((_a = req.session) === null || _a === void 0 ? void 0 : _a.jwt) || ((_b = req.headers.authorization) === null || _b === void 0 ? void 0 : _b.split(" ")[1]); // Extract Bearer token
    console.log("Token Received: ", token);
    if (!token) {
        return next(); // No token, proceed without setting currentUser
    }
    try {
        const payload = jsonwebtoken_1.default.verify(token, process.env.JWT_KEY);
        console.log("Payload Verified: ", payload);
        req.currentUser = payload; // Set currentUser with payload
    }
    catch (error) {
        console.error("JWT verification failed:", error.message);
        req.currentUser = undefined; // Explicitly set to undefined if invalid token
    }
    next();
};
exports.currentUser = currentUser;
