apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: recipe
  labels:
    app: userprofile
  name: userprofile-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userprofile
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      containers:
        - name: userprofile
          image: gabeodame/userprofile-backend
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: DATABASE_URL
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: postgres-host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: postgres-port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: postgres-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: postgres-password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: postgres-db
            - name: NODE_ENV
              value: "production"


---

apiVersion: v1
kind: Service
metadata:
  namespace: recipe
  labels:
    app: userprofile
  name: userprofile-service
spec:
  selector:
    app: userprofile # Must match the app label in the Deployment
  ports:
    - name: http
      protocol: TCP
      port: 3000 # The port exposed by the service
      targetPort: 3000 # The container port defined in the Deployment
  type: ClusterIP

