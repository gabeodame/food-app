apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: recipe
  labels:
    app: userprofile
  name: userprofile-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userprofile
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox
          command: ['sh', '-c', 'until nc -z rabbitmq-service 5672; do echo waiting for rabbitmq; sleep 2; done;']

      containers:
        - name: userprofile
          image: gabeodame/userprofile-backend
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: DB_HOST
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: POSTGRES_PASSWORD         
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: userprofile-postgres-secret
                  key: DATABASE_URL
            - name: NODE_ENV
              value: "production"
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_URL
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: AWS_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: AWS_S3_BUCKET
          # resources:
          #   requests:
          #     memory: "512Mi"
          #     cpu: "250m"
          #   limits:
          #     memory: "1Gi"
          #     cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  namespace: recipe
  labels:
    app: userprofile
  name: userprofile-service
spec:
  selector:
    app: userprofile # Must match the app label in the Deployment
  ports:
    - name: http
      protocol: TCP
      port: 3000 # The port exposed by the service
      targetPort: 3000 # The container port defined in the Deployment
  type: ClusterIP

